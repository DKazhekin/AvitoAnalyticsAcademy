services:
  db:
    image: postgres:latest
    container_name: db_container
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: postgres_db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
    volumes:
      - $HOME/docker/volumes/postgres:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 512M
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - postgres

  app:
    image: $DOCKER_IMAGE
    container_name: recommendation_container
    command: $CONTAINER_WORKDIR/run_app.sh
    volumes:
      - $PROJECT_DIR/cmd:$CONTAINER_WORKDIR/cmd
      - $PROJECT_DIR/config:$CONTAINER_WORKDIR/config
      - $PROJECT_DIR/internal:$CONTAINER_WORKDIR/internal
      - $PROJECT_DIR/views:$CONTAINER_WORKDIR/views
      - $PROJECT_DIR/src:$CONTAINER_WORKDIR/src
      - $PROJECT_DIR/docker/run_app.sh:$CONTAINER_WORKDIR/docker/run_app.sh
      - $PROJECT_DIR/data:$CONTAINER_WORKDIR/data
    env_file:
      - ../.env
    ports:
      - $PORT:$PORT
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -p 5432 -U postgres_user -d postgres_db" ]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    stop_signal: SIGINT
    stop_grace_period: 10s
    depends_on:
      - db
    networks:
      - postgres

networks:
  postgres:
    name: postgres
    external: False
    driver: bridge
